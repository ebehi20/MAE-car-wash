rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(userId) || isAdmin();
    }

    // Customers collection
    match /customers/{customerId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Appointments collection
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.customerId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }

    // Services collection
    match /services/{serviceId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }

    // Transactions collection
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && 
        (resource.data.customerId == request.auth.uid || isAdmin());
      allow write: if isAdmin();
    }
  }
} 